// GENERATED CODE! DO NOT MODIFY BY HAND!

// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { ConversationId } from "./ConversationId";
import type { EventMsg } from "./EventMsg";
import type { ReasoningEffort } from "./ReasoningEffort";

export type SessionConfiguredNotification = { 
/**
 * Name left as session_id instead of conversation_id for backwards compatibility.
 */
sessionId: ConversationId, 
/**
 * Tell the client what model is being queried.
 */
model: string, 
/**
 * The effort the model is putting into reasoning about the user's request.
 */
reasoningEffort: ReasoningEffort | null, 
/**
 * Identifier of the history log file (inode on Unix, 0 otherwise).
 */
historyLogId: bigint, 
/**
 * Current number of entries in the history log.
 */
historyEntryCount: number, 
/**
 * Optional initial messages (as events) for resumed sessions.
 * When present, UIs can use these to seed the history.
 */
initialMessages: Array<EventMsg> | null, rolloutPath: string, };
