// GENERATED CODE! DO NOT MODIFY BY HAND!

// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AddConversationListenerParams } from "./AddConversationListenerParams";
import type { ArchiveConversationParams } from "./ArchiveConversationParams";
import type { CancelLoginChatGptParams } from "./CancelLoginChatGptParams";
import type { ExecOneOffCommandParams } from "./ExecOneOffCommandParams";
import type { FuzzyFileSearchParams } from "./FuzzyFileSearchParams";
import type { GetAuthStatusParams } from "./GetAuthStatusParams";
import type { GitDiffToRemoteParams } from "./GitDiffToRemoteParams";
import type { InitializeParams } from "./InitializeParams";
import type { InterruptConversationParams } from "./InterruptConversationParams";
import type { LedgerCreateCompanyParams } from "./LedgerCreateCompanyParams";
import type { LedgerGetCompanyContextParams } from "./LedgerGetCompanyContextParams";
import type { LedgerListAccountsParams } from "./LedgerListAccountsParams";
import type { LedgerListAuditTrailParams } from "./LedgerListAuditTrailParams";
import type { LedgerListCompaniesParams } from "./LedgerListCompaniesParams";
import type { LedgerListEntriesParams } from "./LedgerListEntriesParams";
import type { LedgerLockPeriodParams } from "./LedgerLockPeriodParams";
import type { LedgerPostEntryParams } from "./LedgerPostEntryParams";
import type { LedgerProcessDocumentParams } from "./LedgerProcessDocumentParams";
import type { LedgerRevalueCurrencyParams } from "./LedgerRevalueCurrencyParams";
import type { LedgerReverseEntryParams } from "./LedgerReverseEntryParams";
import type { LedgerUpsertAccountParams } from "./LedgerUpsertAccountParams";
import type { ListConversationsParams } from "./ListConversationsParams";
import type { LoginApiKeyParams } from "./LoginApiKeyParams";
import type { NewConversationParams } from "./NewConversationParams";
import type { RemoveConversationListenerParams } from "./RemoveConversationListenerParams";
import type { RequestId } from "./RequestId";
import type { ResumeConversationParams } from "./ResumeConversationParams";
import type { SendUserMessageParams } from "./SendUserMessageParams";
import type { SendUserTurnParams } from "./SendUserTurnParams";
import type { SetDefaultModelParams } from "./SetDefaultModelParams";

/**
 * Request from the client to the server.
 */
export type ClientRequest = { "method": "initialize", id: RequestId, params: InitializeParams, } | { "method": "newConversation", id: RequestId, params: NewConversationParams, } | { "method": "listConversations", id: RequestId, params: ListConversationsParams, } | { "method": "resumeConversation", id: RequestId, params: ResumeConversationParams, } | { "method": "archiveConversation", id: RequestId, params: ArchiveConversationParams, } | { "method": "sendUserMessage", id: RequestId, params: SendUserMessageParams, } | { "method": "sendUserTurn", id: RequestId, params: SendUserTurnParams, } | { "method": "interruptConversation", id: RequestId, params: InterruptConversationParams, } | { "method": "addConversationListener", id: RequestId, params: AddConversationListenerParams, } | { "method": "removeConversationListener", id: RequestId, params: RemoveConversationListenerParams, } | { "method": "gitDiffToRemote", id: RequestId, params: GitDiffToRemoteParams, } | { "method": "loginApiKey", id: RequestId, params: LoginApiKeyParams, } | { "method": "loginChatGpt", id: RequestId, params: undefined, } | { "method": "cancelLoginChatGpt", id: RequestId, params: CancelLoginChatGptParams, } | { "method": "logoutChatGpt", id: RequestId, params: undefined, } | { "method": "getAuthStatus", id: RequestId, params: GetAuthStatusParams, } | { "method": "getUserSavedConfig", id: RequestId, params: undefined, } | { "method": "setDefaultModel", id: RequestId, params: SetDefaultModelParams, } | { "method": "getUserAgent", id: RequestId, params: undefined, } | { "method": "userInfo", id: RequestId, params: undefined, } | { "method": "fuzzyFileSearch", id: RequestId, params: FuzzyFileSearchParams, } | { "method": "execOneOffCommand", id: RequestId, params: ExecOneOffCommandParams, } | { "method": "ledgerCreateCompany", id: RequestId, params: LedgerCreateCompanyParams, } | { "method": "ledgerUpsertAccount", id: RequestId, params: LedgerUpsertAccountParams, } | { "method": "ledgerPostEntry", id: RequestId, params: LedgerPostEntryParams, } | { "method": "ledgerReverseEntry", id: RequestId, params: LedgerReverseEntryParams, } | { "method": "ledgerLockPeriod", id: RequestId, params: LedgerLockPeriodParams, } | { "method": "ledgerRevalueCurrency", id: RequestId, params: LedgerRevalueCurrencyParams, } | { "method": "ledgerListAuditTrail", id: RequestId, params: LedgerListAuditTrailParams, } | { "method": "ledgerListCompanies", id: RequestId, params: LedgerListCompaniesParams, } | { "method": "ledgerListAccounts", id: RequestId, params: LedgerListAccountsParams, } | { "method": "ledgerListEntries", id: RequestId, params: LedgerListEntriesParams, } | { "method": "ledgerGetCompanyContext", id: RequestId, params: LedgerGetCompanyContextParams, } | { "method": "ledgerProcessDocument", id: RequestId, params: LedgerProcessDocumentParams, };
